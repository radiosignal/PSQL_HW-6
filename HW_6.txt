1. Создать функцию, которая по идентификатору пользователя ищет того, кто написал
пользователю наибольшее количество сообщений. В результат нужно вывести идентификатор
искомого пользователя.
CREATE TYPE messages_match AS (name VARCHAR(250), id INTEGER, received BIGINT );

CREATE FUNCTION user_id_has_sent_max_messages_to_recipient(user_id INTEGER) 
RETURNS messages_match AS
$$
SELECT 
first_name, 
users.id,
from_user_id
FROM messages
LEFT JOIN users
ON messages.id = users.id
WHERE to_user_id = user_id
ORDER BY from_user_id DESC 
LIMIT 1;
$$
LANGUAGE SQL;

SELECT user_id_has_sent_max_messages_to_recipient(25);


2. Создать процедуру, которая проверяет владельца фотографий, которые указаны в качестве
основных фотографий пользователей в таблице профилей. Если пользователь в профилях не
является владельцем своей основной фотографии, тогда для него нужно записать NULL в
столбце main_photo_id.



CREATE OR REPLACE PROCEDURE check_user_by_photo()

LANGUAGE PLPGSQL AS
$$
DECLARE owner_photo RECORD;
BEGIN
	FOR owner_photo IN
		SELECT profiles.user_id
		FROM profiles
		JOIN photo
		ON profiles.main_photo_id = photo.id
		WHERE photo.owner_id !=  profiles.user_id
		LOOP
			UPDATE profiles SET main_photo_id = NULL WHERE user_id = owner_photo.user_id;
		END LOOP;
	COMMIT;
END;
$$;

	

CALL check_user_by_photo();
SELECT * FROM profiles WHERE main_photo_id  IS NOT NULL;
